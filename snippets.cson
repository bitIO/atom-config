# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#

# COMMON
'.source.js':
  'use strict':
    'prefix': 'st;'
    'body': '\'use strict\';'

  'block sub-header':
    'prefix': '--'
    'body'  : '// $1\n// -----------------------------------------------------------------------------'

  'block header':
    'prefix': '---'
    'body'  : '// -----------------------------------------------------------------------------\n// $1\n// -----------------------------------------------------------------------------'

'.source.coffee':
  'block sub-header':
    'prefix': '#-'
    'body'  : '# $1\n# -----------------------------------------------------------------------------'

  'block header':
    'prefix': '##'
    'body'  : '# -----------------------------------------------------------------------------\n# $1\n# -----------------------------------------------------------------------------'

# REACT
# source: https://raw.githubusercontent.com/webbushka/atom-react-snippets/master/snippets/React%20(JSX).cson
".source.js":
  "React: import()":
    prefix: "_ir"
    body: "import React from 'react'"

  "React: componentDidMount() { ... }":
    prefix: "_cdm"
    body: "componentDidMount() {\n\t${1}\n}${2}"

  "React: componentDidUpdate(pp, ps) { ... }":
    prefix: "_cdup"
    body: "componentDidUpdate(prevProps, prevState) {\n\t${1}\n}${2}"

  "React: componentWillMount() { ... }":
    prefix: "_cwm"
    body: "componentWillMount() {\n\t${1}\n}${2}"

  "React: componentWillReceiveProps(np) { ... }":
    prefix: "_cwr"
    body: "componentWillReceiveProps(nextProps) {\n\t${1}\n}${2}"

  "React: componentWillUnmount() { ... }":
    prefix: "_cwun"
    body: "componentWillUnmount() {\n\t${1}\n}${2}"

  "React: componentWillUpdate(np, ns) { ... }":
    prefix: "_cwu"
    body: "componentWillUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: cx({ ... })":
    prefix: "_cx"
    body: "cx({\n\t$1: $2\n});"

  "React: forceUpdate(...)":
    prefix: "_fup"
    body: "forceUpdate(${1:callback});"

  "React: isMounted()":
    prefix: "_ism"
    body: "isMounted()"

  "React: Class.propTypes = { ... }":
    prefix: "_cpt"
    body: "${1}.propTypes = {\n\t${2}: React.PropTypes.${3:string}\n};"

  "React: propTypes { ... }":
    prefix: "_pt"
    body: "propTypes: {\n\t${1}: React.PropTypes.${2:string}\n},"

  "React: React.PropTypes.":
      prefix: "_rpt"
      body: "React.PropTypes."

  "React: Component displayName":
    prefix: "_cdn"
    body: "${1}.displayName = '${1}';"

  "React: render() { return ... }":
    prefix: "_ren"
    body: "render() {\n\treturn (\n\t\t${1:<div />}\n\t);\n}"

  "React: setState({ ... })":
    prefix: "_sst"
    body: "this.setState({\n\t${1}: ${2}\n});"

  "React: shouldComponentUpdate(np, ns) { ... }":
    prefix: "_scu"
    body: "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: this.props.":
    prefix: "_props"
    body: "this.props.${1}"

  "React: this.state.":
    prefix: "_state"
    body: "this.state.${1}"

  "React: render(component, container, [callback])":
    prefix: "_rrc"
    body: "React.render(${1:<$2 />}, ${3:document.body}${4:, ${5:callback}});"

  "React: constructor(props)":
    prefix: "_cns"
    body: "constructor(props) {\n\tsuper(props);\n\t${1:this.state = ${2};}\n}"

  "React: dangerouslySetInnerHTML":
    prefix: "_dnghtml"
    body: "dangerouslySetInnerHTML={{__html: ${1}}}"
